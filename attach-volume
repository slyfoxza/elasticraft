#!/usr/bin/env python3
# Copyright 2019 Philip Cronje
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and limitations under the License.
import boto3
import random
import sys
import time

BASE_RETRY_DELAY = 0.01
MAX_RETRY_DELAY = 1.0

ec2 = boto3.resource("ec2", region_name=sys.argv[3])

volumes = list(ec2.volumes.filter(Filters=[{"Name": "tag:elasticraft", "Values": ["dataVolume"]}]))
if len(volumes) == 1:
    volume = volumes[0]
elif len(volumes) == 0:
    print("No Elasticraft data volume found", file=sys.stderr)
    sys.exit(1)
else:
    print("Multiple volumes found tagged as Elasticraft data volume", file=sys.stderr)
    sys.exit(1)

state = volume.attach_to_instance(Device=sys.argv[1], InstanceId=sys.argv[2])['State']
sleep_time = BASE_RETRY_DELAY
while state == 'attaching' or state != 'attached':
    time.sleep(sleep_time)
    sleep_time = random.uniform(BASE_RETRY_DELAY, sleep_time * 3)
    sleep_time = sleep_time if sleep_time < MAX_RETRY_DELAY else MAX_RETRY_DELAY
    volume.reload()
    for attachment in volume.attachments:
        if attachment["InstanceId"] == sys.argv[2]:
            state = attachment["State"]
            break
    else:
        print(f"Volume is no longer attached to instance {sys.argv[2]}", file=sys.stderr)
        sys.exit(1)

if state != 'attached':
    print(f"Volume {volume.id} did not attach to instance {sys.argv[2]}, status was {state}", file=sys.stderr)
    sys.exit(1)
else:
    print(f"Attached {volume.id} to {sys.argv[2]} at /dev/{sys.argv[1]}")
