# Copyright 2019 Philip Cronje
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and limitations under the License.
power_state:
  # Reboot if during cloud-init a kernel update was installed that is newer than what was bundled in the AMI
  mode: reboot
  condition: "[ $(uname --kernel-release) != $(rpm --query kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}\n'|sort --version-sort|tail --lines=1) ]"
users:
- default
- name: minecraft
  homedir: /srv/elasticraft
  no_create_home: True
  no_user_group: True
  primary_group: games
  shell: /sbin/nologin
  ssh_redirect_user: True
  system: True
  uid: '25565'
write_files:
- path: /etc/amazon-cloudwatch-agent.json
  content: |
    {
      "logs": {
        "logs_collected": {
          "files": {
            "collect_list": [
              {
                "file_path": "/var/log/cloud-init-output.log",
                "log_group_name": "cloud-init-output.log"
              },
              {
                "file_path": "/var/log/minecraft.log",
                "log_group_name": "minecraft.log",
                "timestamp_format": "%Y-%m-%d %H:%M:%S",
                "multi_line_start_pattern": "{timestamp_format}"
              }
            ]
          }
        }
      }
    }
- path: /etc/elasticraft/log4j2.xml
  content: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="warn">
      <Appenders>
        <RandomAccessFile name="File" fileName="/var/log/minecraft.log">
          <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss} [%thread] %-5level - %message%n"/>
        </RandomAccessFile>
      </Appenders>
      <Loggers>
        <Root level="info">
          <Filters>
            <MarkerFilter marker="NETWORK_PACKETS" onMatch="DENY" onMismatch="NEUTRAL"/>
          </Filters>
          <AppenderRef ref="File"/>
        </Root>
      </Loggers>
    </Configuration>
- path: /etc/systemd/system/minecraft.service
  content: |
    [Unit]
    Description=Minecraft game server
    After=amazon-cloudwatch-agent.service network.target remote-fs.target
    RequiresMountsFor=/srv/elasticraft

    [Service]
    ExecStart=@/usr/bin/java minecraft -Dlog4j.configurationFile=/etc/elasticraft/log4j2.xml -jar server.jar
    # 128 + SIGTERM = 143
    SuccessExitStatus=143
    WorkingDirectory=/srv/elasticraft
    User=minecraft
    # "strict" isn't supported in Amazon Linux 2's systemd
    ProtectSystem=full
    ProtectHome=true
    SyslogIdentifier=minecraft

    [Install]
    WantedBy=multi-user.target
- path: /etc/systemd/system/amazon-cloudwatch-agent.service.d/elasticraft.conf
  content: |
    [Service]
    # The unit file shipped with the CloudWatch agent lets systemd take the default action of sending SIGTERM
    # to the process. However, it seems that the agent doesn't process that signal as a request to shutdown
    # cleanly, while it does appear to do so for SIGINT.
    KillSignal=SIGINT
